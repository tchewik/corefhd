FROM ubuntu:22.04

SHELL ["/bin/bash", "-c"]

RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y liblzma-dev libffi-dev build-essential git curl
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
    libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev


# RUN export PATH="$HOME/.pyenv/bin:$PATH"
# ENV PATH="/root/.pyenv/bin:$PATH"
# RUN curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
# ENV PATH /opt/.pyenv/shims:/opt/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
# RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> /root/.bashrc
# RUN echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> /root/.bashrc
# RUN echo 'eval "$(pyenv init -)"' >> /root/.bashrc
# RUN source /root/.bashrc

# RUN curl https://pyenv.run | bash
# ENV PATH="/root/.pyenv/bin:$PATH"
# RUN eval "$(pyenv init -)"
# RUN eval "$(pyenv virtualenv-init -)"
# ENV PATH /opt/.pyenv/shims:/opt/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
# RUN echo 'eval "$(pyenv init -)"' >> /root/.bashrc
# RUN echo 'eval "$(pyenv virtualenv-init -)"' >> /root/.bashrc
# RUN source /root/.bashrc
# # RUN /bin/bash -c 'pyenv install 3.9.15 && pyenv global 3.9.15'
# RUN pyenv install 3.9.15
# RUN pyenv global 3.9.15


# Python, Pyenv and pipenv (https://www.python.org/downloads/)
RUN git clone https://github.com/pyenv/pyenv.git /root/.pyenv

ENV PATH /root/.pyenv/bin:/root/.pyenv/shims:$PATH
RUN pyenv install 3.9.15 && \
    pyenv global 3.9.15 && \
    pip install -U pip pipenv

RUN pip install -U pip
RUN python -m pip install -U cython

RUN pip install allennlp allennlp-models networkx
RUN pip install git+https://github.com/IINemo/isanlp.git

COPY src /src
COPY models/model_rh.tar.gz models/model_rh.tar.gz

COPY load_custom_allennlp_scripts_docker.bash /load_custom_allennlp_scripts_docker.bash
RUN /load_custom_allennlp_scripts_docker.bash

COPY pipeline_object_rh.py /pipeline_object.py
COPY processor_corefhd.py /processor_corefhd.py
COPY start.py /start.py

CMD [ "python", "/start.py", "-m", "pipeline_object", "-a", "create_pipeline", "--no_multiprocessing", "True"]
